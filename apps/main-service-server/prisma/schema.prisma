datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Role {
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  roleName  String?
  updatedAt DateTime @updatedAt
  users     User[]
}

model Page {
  content   String?
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
}

model User {
  carts     Cart[]
  createdAt DateTime @default(now())
  email     String?  @unique
  firstName String?
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  lastName  String?
  pages     Page[]
  password  String
  role      Role?    @relation(fields: [roleId], references: [id])
  roleId    String?  @db.ObjectId
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Product {
  cartItems   CartItem[]
  createdAt   DateTime   @default(now())
  description String?
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  price       Float?
  quantity    Int?
  updatedAt   DateTime   @updatedAt
}

model Cart {
  cartItems  CartItem[]
  createdAt  DateTime   @default(now())
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  totalPrice Float?
  updatedAt  DateTime   @updatedAt
  user       User?      @relation(fields: [userId], references: [id])
  userId     String?    @db.ObjectId
}

model CartItem {
  cart       Cart?     @relation(fields: [cartId], references: [id])
  cartId     String?   @db.ObjectId
  createdAt  DateTime  @default(now())
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  product    Product?  @relation(fields: [productId], references: [id])
  productId  String?   @db.ObjectId
  quantity   Int?
  reservedAt DateTime?
  updatedAt  DateTime  @updatedAt
}
